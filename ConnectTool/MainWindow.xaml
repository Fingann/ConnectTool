<Controls:MetroWindow
    x:Class="ConnectTool.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ignore="http://www.galasoft.ch/ignore"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:ConnectTool.Model.ViewNavigation"
    xmlns:views="clr-namespace:ConnectTool.Views"
    xmlns:vm="clr-namespace:ConnectTool.ViewModel"
    Title="{Binding CurrentViewModel.Title, StringFormat='ConnectTool - {0}', UpdateSourceTrigger=PropertyChanged}"
    Width="887.755"
    Height="479.3"
    DataContext="{Binding Main, Source={StaticResource Locator}}"
    Style="{DynamicResource CustomDefaultWindowStyle}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    TitleCharacterCasing="Normal"
    mc:Ignorable="d ignore">
    <!--  FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"  -->
    <Window.Resources>
        <ResourceDictionary>
            <Style
                x:Key="CustomDefaultWindowStyle"
                BasedOn="{StaticResource {x:Type Controls:MetroWindow}}"
                TargetType="{x:Type Controls:MetroWindow}">
                <Setter Property="WindowTransitionsEnabled" Value="False" />
                <Setter Property="EnableDWMDropShadow" Value="True" />
            </Style>
            <Style
                x:Key="MenuButton"
                x:Name="MenuButton"
                BasedOn="{StaticResource MetroFlatButton}"
                TargetType="Button">
                <Setter Property="Height" Value="40" />
                <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="0,0,0,0" />


            </Style>

            <DataTemplate DataType="{x:Type vm:LoginViewModel}">
                <views:LoginView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type vm:CallerViewModel}">
                <views:CallerView />
            </DataTemplate>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="Skins/MainSkin.xaml" />

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost Identifier="RootDialog">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="47*" />
                <RowDefinition Height="9*" />
            </Grid.RowDefinitions>
            <materialDesign:DrawerHost Grid.RowSpan="2" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">

                <materialDesign:DrawerHost.LeftDrawerContent>

                    <DockPanel MinWidth="212" Background="{StaticResource AccentColorBrush2}">

                        <DockPanel
                            Margin="16"
                            HorizontalAlignment="Stretch"
                            DockPanel.Dock="Top">
                            <TextBlock
                                VerticalAlignment="Center"
                                DockPanel.Dock="Left"
                                FontSize="22"
                                Foreground="White">
                                Meny
                            </TextBlock>
                            <ToggleButton
                                HorizontalAlignment="Right"
                                DockPanel.Dock="Right"
                                IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                        </DockPanel>



                        <ListBox
                            x:Name="NavigationViewListBox"
                            Margin="0"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Background="{StaticResource AccentColorBrush}"
                            ItemsSource="{Binding MenuNavigationList}"
                            PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                            SelectedIndex="0"
                            SelectedValue="{Binding CurrentViewModel}"
                            SelectedValuePath="Value">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="MinHeight" Value="40" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Padding" Value="0,3" />
                                    <Setter Property="FontSize" Value="17" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>

                                    <TextBlock
                                        Margin="32,0,32,0"
                                        Foreground="White"
                                        Text="{Binding Path=Key}" />

                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <!--<model:MenuItem x:Name="Login">
                            <model:MenuItem.Content>
                                <views:LoginView />
                            </model:MenuItem.Content>
                        </model:MenuItem>
                        <model:MenuItem x:Name="Caller">
                            <model:MenuItem.Content>
                                <views:CallerView>

                                </views:CallerView>
                            </model:MenuItem.Content>
                        </model:MenuItem>-->

                        </ListBox>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>

                <DockPanel>

                    <materialDesign:ColorZone
                        Padding="16"
                        materialDesign:ShadowAssist.ShadowDepth="Depth2"
                        DockPanel.Dock="Top"
                        Mode="PrimaryMid">
                        <DockPanel>
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                IsChecked="False"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                            <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges">
                                <StackPanel>
                                    <Button Content="Reset" />
                                    <Button Content="Settings" />
                                </StackPanel>
                            </materialDesign:PopupBox>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="22"
                                Text="{Binding CurrentViewTitle, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                    </materialDesign:ColorZone>
                    <ContentControl Margin="0" Content="{Binding CurrentViewModel}" />
                </DockPanel>


            </materialDesign:DrawerHost>
            <materialDesign:Card
                Grid.Row="1"
                Margin="5,5,5,5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Foreground="{Binding PopupMessage.MessageColor, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding PopupMessageVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="8*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        x:Name="PopupTitle"
                        Grid.Column="0"
                        Margin="7,0,30,1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        FontSize="25"
                        Text="{Binding PopupMessage.Title, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        x:Name="PopupDescription"
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Text="{Binding PopupMessage.Description, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="WrapWithOverflow" />


                    <Button
                        x:Name="PopupClose"
                        Grid.Column="2"
                        Margin="10"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Command="{Binding HideErrorMessage}"
                        Content="Close" />
                </Grid>
            </materialDesign:Card>
        </Grid>
    </materialDesign:DialogHost>

    <!--<Grid x:Name="LayoutRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2.5*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>


        <Grid x:Name="NavigationGrid" HorizontalAlignment="Stretch" Background="{DynamicResource MaterialDesignPaper}" VerticalAlignment="Stretch" Margin="0" Grid.Column="0">
                    <StackPanel x:Name="NavigationButtonPanel" Margin="0" >
                        <Button x:Name="CallerView" Content="Caller" >
                        </Button>
                <Button x:Name="HvemHvaHvorView"  Content="Hvem Hva Hvor">

                </Button>
                    </StackPanel>

                </Grid>

                <Grid x:Name="ContentGrid"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Grid.Column="1">

            <ContentControl Content="{Binding CurrentViewModel, UpdateSourceTrigger=PropertyChanged}" Height="auto" Width="auto" Margin="0" ></ContentControl>

                </Grid>
    -->
    <!--</DockPanel>-->

    <!--</DockPanel>-->





    <!--<TextBlock FontSize="36"
                   FontWeight="Bold"
                   Foreground="Purple"
                   Text="{Binding WelcomeTitle}"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   TextWrapping="Wrap" />-->
    <!--

    </Grid>-->
</Controls:MetroWindow>
